# esphome -s device_name ug-gute-stube-rollo-links -s device_friendly_name "UG Gute Stube Rolladen links" -s device_area "UG Wohnstube" run rolladensteuerung-dual-r3.yaml

substitutions:
  #device_name: ug-gute-stube-rollo-links
  #device_friendly_name: UG Gute Stube Rolladen links
  device_name: ug-gute-stube-rollo-rechts
  device_friendly_name: UG Gute Stube Rolladen rechts
  device_area: UG Wohnstube

esphome:
  name: ${device_name}
  friendly_name: ${device_friendly_name}
  area: ${device_area}

esp32:
  board: esp32dev

packages:
  wifi: !include common/wifi.yaml
  general: !include common/general.yaml

# wifi: { use_address: 192.168.23.x }


light:

  - platform: status_led
    name: Blaue Status LED
    id: blue_status_led
    internal: true
    pin:
      number: GPIO13
      inverted: True


switch:

  - platform: gpio
    name: Motorfahrt hoch
    pin: GPIO27
    id: relay_open_led_1
    interlock: [relay_close_led_2]
    interlock_wait_time: 250ms
    # internal: true

  - platform: gpio
    name: Motorfahrt runter
    pin: GPIO14
    id: relay_close_led_2
    interlock: [relay_open_led_1]
    interlock_wait_time: 250ms
    # internal: true


binary_sensor:
  # https://esphome.io/components/binary_sensor/index.html

  - platform: gpio
    name: On-board Button
    id: button_onboard
    pin:
      number: GPIO0
      mode:
        input: true
        pullup: true
      inverted: true
    internal: true
    filters:
      - delayed_on: 50ms
    on_press:
      - button.press: esp_restart_button

  - platform: gpio
    name: Externer Taster hoch
    pin:
      number: GPIO32
      mode:
        input: True
        pullup: True
      inverted: True
    internal: true
    filters:
      - delayed_on_off: 50ms
    on_press:
      - lambda: |-
          auto call = id(my_cover).make_call();
          if (id(my_cover).current_operation == CoverOperation::COVER_OPERATION_IDLE) {
            call.set_command_open();
          } else {
            call.set_command_stop();
          }
          call.perform();
    on_click:
      - min_length: 0.5s
        max_length: 999s
        then: # falling edge action
          - cover.stop: my_cover

  - platform: gpio
    name: Externer Taster runter
    pin:
      number: GPIO33
      mode:
        input: True
        pullup: True
      inverted: True
    internal: true
    filters:
      - delayed_on_off: 50ms
    on_press:
      - lambda: |-
          auto call = id(my_cover).make_call();
          if (id(my_cover).current_operation == CoverOperation::COVER_OPERATION_IDLE) {
            call.set_command_close();
          } else {
            call.set_command_stop();
          }
          call.perform();
    on_click:
      - min_length: 0.5s
        max_length: 999s
        then: # falling edge action
          - cover.stop: my_cover


uart:
  tx_pin: GPIO25
  rx_pin: GPIO26
  baud_rate: 38400
  parity: EVEN
  stop_bits: 1

sensor:
  # https://esphome.io/components/sensor/cse7761.html
  # Rollomotor Gute Stube: 0.44A, 100W
  - platform: cse7761
    update_interval: 0.25s
    current_1:
      name: Motorstrom hoch
      id: current_open_1
      # internal: true
    current_2:
      name: Motorstrom runter
      id: current_close_2
      # internal: true
    # voltage:
    #   name: Voltage
    #   disabled_by_default: True
    # active_power_1:
    #   name: Power 1
    # active_power_2:
    #   name: Power 2

logger:
  logs:
    # Disable printing the readings from cse7761
    sensor: INFO
    #cse7761: INFO


cover:
  # https://esphome.io/components/cover/current_based.html
  - platform: current_based
    name: Rollosteuerung
    id: my_cover

    open_sensor: current_open_1
    open_moving_current_threshold: 0.01
    open_obstacle_current_threshold: 1.0
    open_duration: 18s
    open_action:
      - switch.turn_on: relay_open_led_1

    close_sensor: current_close_2
    close_moving_current_threshold: 0.01
    close_obstacle_current_threshold: 1.0
    close_duration: 14s
    close_action:
      - switch.turn_on: relay_close_led_2

    stop_action:
      - switch.turn_off: relay_open_led_1
      - switch.turn_off: relay_close_led_2

    max_duration: 20s
    obstacle_rollback: 30%
    start_sensing_delay: 0.6s
    malfunction_detection: true
