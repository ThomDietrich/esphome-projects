substitutions:
  device_name: taubenfutterspender
  device_friendly_name: Taubenfutterspender
  device_area: Hof

  status_led_pin: GPIO2


packages:
  system: !include system/stamp_c3u.yaml
  wifi: !include common/wifi.yaml
  general: !include common/general.yaml
  status_led: !include include/on_board_status_led_sk6812.yaml
  include_1: !include include/food_dispenser_hardware.yaml
  include_2: !include include/food_dispenser_entities.yaml
  include_3: !include include/food_dispenser_output_script.yaml


wifi:
  use_address: 192.168.23.106


api:
  services:
    #
    # Home Assistant Service
    #
    # timeout_sec: Max duration in seconds to prevent damages in case of clogging or similar.
    # You should choose a meaningful timeout (e.g. 2x normal duration) to act as a safeguard in case of issues.
    #
    # target_g: Output target mass. Expect the result to slightly overshoot (see offset_g).
    # Set to 9999 if you want to work with a fixed duration via timeout_sec.
    #
    # offset_g: Correction to the provided target output to prevent overshooting.
    # You have to identify this value over the course of a few trial runs.
    # Internal target = target_g - offset_g
    #
    - service: output
      variables:
        timeout_sec: int
        target_g: int
        offset_g: int
      then:
        - script.execute:
            id: script_controlled_output
            timeout_sec: !lambda 'return timeout_sec;'
            target_g: !lambda 'return target_g;'
            offset_g: !lambda 'return offset_g;'
