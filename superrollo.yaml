# esphome -s device_name kueche-superrollo -s device_friendly_name "Küche Superrollo" -s device_area "Küche" -s open_seconds 18.0 -s close_seconds 16.5 run superrollo.yaml
# esphome -s device_name schlafzimmer-superrollo -s device_friendly_name "Schlafzimmer Superrollo" -s device_area "Schlafzimmer" -s open_seconds 18.0 -s close_seconds 16.5 run superrollo.yaml

substitutions:
  device_name: kueche-superrollo
  device_friendly_name: Küche Superrollo
  device_area: Küche
  #open_seconds: 9.9
  #close_seconds: 9.9
  #
  # superrollo-kueche
  #open_seconds: 18.0
  #close_seconds: 16.5
  # superrollo-schlafzimmer
  #open_seconds: 18.0
  #close_seconds: 16.5
  # superrollo-wohnzimmer
  #open_seconds:
  #close_seconds:

esphome:
  name: ${device_name}
  friendly_name: ${device_friendly_name}
  area: ${device_area}
  project:
    name: "Rademacher_plus_Wemos.Superrollo_GW60_plus_D1_mini"
    version: "0.0"

esp8266:
  board: d1_mini

packages:
  wifi: !include common/wifi.yaml
  general: !include common/general.yaml

# wifi: { use_address: 192.168.1.72 } # Küche
# wifi: { use_address: 192.168.1.67 } # Schlafzimmer

switch:
  - platform: gpio
    name: "Ausloeser Hoch"
    id: relay_up
    pin: D1
    icon: mdi:archive-arrow-up-outline
    on_turn_on:
      - delay: 300ms
      - switch.turn_off: relay_up
    internal: true
  - platform: gpio
    name: "Ausloeser Runter"
    id: relay_down
    pin: D2
    icon: mdi:archive-arrow-down-outline
    on_turn_on:
      - delay: 300ms
      - switch.turn_off: relay_down
    internal: true

binary_sensor:
  - platform: gpio
    name: "Faehrt hoch"
    id: movement_up
    pin: D7
    filters:
      - invert:
    internal: true
  - platform: gpio
    name: "Faehrt runter"
    id: movement_down
    pin: D6
    filters:
      - invert:
    internal: true

cover:
  - platform: feedback
    name: Rolladen
    id: my_cover
    device_class: shade
    #
    open_action:
      - switch.turn_on: relay_up
    open_duration: ${open_seconds}s
    open_sensor: movement_up
    #
    close_action:
      - switch.turn_on: relay_down
    close_duration: ${close_seconds}s
    close_sensor: movement_down
    #
    has_built_in_endstop: true
    infer_endstop_from_movement: true
    stop_action:
      - switch.turn_on: relay_up
      - switch.turn_on: relay_down
